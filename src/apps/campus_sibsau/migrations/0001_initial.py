# Generated by Django 3.2.6 on 2021-08-16 02:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coast', models.PositiveSmallIntegerField(choices=[(0, 'Левый'), (1, 'Правый')], verbose_name='Берег')),
                ('address', models.CharField(max_length=256, verbose_name='Адрес')),
                ('address_ru', models.CharField(max_length=256, null=True, verbose_name='Адрес')),
                ('address_en', models.CharField(max_length=256, null=True, verbose_name='Адрес')),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                ('link', models.URLField(verbose_name='Ссылка на 2gis')),
                ('type', models.CharField(blank=True, max_length=128, verbose_name='Тип')),
                ('type_ru', models.CharField(blank=True, max_length=128, null=True, verbose_name='Тип')),
                ('type_en', models.CharField(blank=True, max_length=128, null=True, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Корпус',
                'verbose_name_plural': 'Корпуса',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=200, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=200, null=True, verbose_name='Название')),
                ('fio', models.CharField(max_length=200, verbose_name='ФИО')),
                ('fio_ru', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('fio_en', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('address_ru', models.TextField(null=True, verbose_name='Адрес')),
                ('address_en', models.TextField(null=True, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, max_length=19, null=True, verbose_name='Телефон')),
                ('mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
            ],
            options={
                'verbose_name': 'Кафедра',
                'verbose_name_plural': 'Кафедры',
            },
        ),
        migrations.CreateModel(
            name='DesignOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('fio', models.CharField(blank=True, max_length=128, null=True, verbose_name='Руководитель')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('about', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Конструкторское бюро',
                'verbose_name_plural': 'Конструкторские бюро',
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='campus/directors/photos/', verbose_name='Фотография')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('name_ru', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('name_en', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('address_ru', models.TextField(null=True, verbose_name='Адрес')),
                ('address_en', models.TextField(null=True, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=19, verbose_name='Телефон')),
                ('mail', models.EmailField(max_length=254, verbose_name='Почта')),
            ],
            options={
                'verbose_name': 'Директор института',
                'verbose_name_plural': 'Директора институтов',
            },
        ),
        migrations.CreateModel(
            name='Ensemble',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('logo', models.ImageField(upload_to='campus/ensemble/logo', verbose_name='Логотип')),
                ('about', models.TextField(verbose_name='Описание')),
                ('achievements', models.TextField(blank=True, verbose_name='Достижения')),
                ('contacts', models.TextField(verbose_name='Контакты')),
                ('vk_link', models.CharField(blank=True, max_length=128, null=True, verbose_name='Ссылка на вк')),
                ('instagram_link', models.CharField(blank=True, max_length=128, null=True, verbose_name='Ссылка на инстаграм')),
            ],
            options={
                'verbose_name': 'Коллектив',
                'verbose_name_plural': 'Коллективы',
            },
        ),
        migrations.CreateModel(
            name='Soviet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='campus/soviets/photos/', verbose_name='Фотография')),
                ('fio', models.CharField(max_length=200, verbose_name='ФИО')),
                ('fio_ru', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('fio_en', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('address_ru', models.TextField(null=True, verbose_name='Адрес')),
                ('address_en', models.TextField(null=True, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, max_length=19, null=True, verbose_name='Телефон')),
                ('mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
            ],
            options={
                'verbose_name': 'Студенческий совет',
                'verbose_name_plural': 'Студенческие советы',
            },
        ),
        migrations.CreateModel(
            name='SportClub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='campus/sports/logo', verbose_name='Логотип')),
                ('name', models.CharField(max_length=200, verbose_name='Название кружка')),
                ('name_ru', models.CharField(max_length=200, null=True, verbose_name='Название кружка')),
                ('name_en', models.CharField(max_length=200, null=True, verbose_name='Название кружка')),
                ('fio', models.CharField(max_length=200, verbose_name='Тренер')),
                ('fio_ru', models.CharField(max_length=200, null=True, verbose_name='Тренер')),
                ('fio_en', models.CharField(max_length=200, null=True, verbose_name='Тренер')),
                ('phone', models.CharField(max_length=19, verbose_name='Телефон тренера')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('address_ru', models.TextField(null=True, verbose_name='Адрес')),
                ('address_en', models.TextField(null=True, verbose_name='Адрес')),
                ('dates', models.TextField(verbose_name='В какие дни ведет')),
                ('dates_ru', models.TextField(null=True, verbose_name='В какие дни ведет')),
                ('dates_en', models.TextField(null=True, verbose_name='В какие дни ведет')),
            ],
            options={
                'verbose_name': 'Спортивный кружок',
                'verbose_name_plural': 'Спортивные кружки',
            },
        ),
        migrations.CreateModel(
            name='Union',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=200, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=200, null=True, verbose_name='Название')),
                ('short_name', models.CharField(blank=True, max_length=64, verbose_name='Сокращенное название')),
                ('short_name_ru', models.CharField(blank=True, max_length=64, null=True, verbose_name='Сокращенное название')),
                ('short_name_en', models.CharField(blank=True, max_length=64, null=True, verbose_name='Сокращенное название')),
                ('rank', models.PositiveIntegerField(default=0, help_text='Чем меньше номер, тем выше по списку будет объединение', verbose_name='Номер в списке')),
                ('logo', models.ImageField(upload_to='campus/unions/logo/', verbose_name='Логотип')),
                ('photo', models.ImageField(upload_to='campus/unions/photos', verbose_name='Фотография')),
                ('fio', models.CharField(max_length=200, verbose_name='ФИО')),
                ('fio_ru', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('fio_en', models.CharField(max_length=200, null=True, verbose_name='ФИО')),
                ('leader_rank', models.CharField(blank=True, max_length=128, verbose_name='Должность')),
                ('leader_rank_ru', models.CharField(blank=True, max_length=128, null=True, verbose_name='Должность')),
                ('leader_rank_en', models.CharField(blank=True, max_length=128, null=True, verbose_name='Должность')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('address_ru', models.TextField(null=True, verbose_name='Адрес')),
                ('address_en', models.TextField(null=True, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=19, verbose_name='Телефон')),
                ('group_vk', models.URLField(verbose_name='Группа во вконтакте')),
                ('page_vk', models.URLField(blank=True, help_text='Ссылка обязательно должна быть в формате https://vk.com/id1234.\n                       Если она будет иметь другой формат, то нельзя будет отправлять заявки на вступление', null=True, verbose_name='Председатель во вконтакте')),
                ('about', models.TextField(blank=True, verbose_name='Описание')),
                ('about_ru', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('about_en', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Объединениие',
                'verbose_name_plural': 'Объединения',
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='JoiningEnsemble',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=31, verbose_name='ФИО')),
                ('phone', models.CharField(max_length=19, verbose_name='Телефон')),
                ('link_on_vk', models.CharField(max_length=128, verbose_name='Ссылка на ВКонтакте')),
                ('experience', models.TextField(verbose_name='Опыт творческой деятельности')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('create_data', models.DateTimeField(auto_now_add=True, verbose_name='Дата вступления')),
                ('ensemble', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_sibsau.ensemble', verbose_name='Ансамбль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заявка в коллектив',
                'verbose_name_plural': 'Заявки в коллективы',
            },
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('name_ru', models.TextField(null=True, verbose_name='Название')),
                ('name_en', models.TextField(null=True, verbose_name='Название')),
                ('short_name', models.CharField(blank=True, max_length=16, verbose_name='Сокращенное название')),
                ('short_name_ru', models.CharField(blank=True, max_length=16, null=True, verbose_name='Сокращенное название')),
                ('short_name_en', models.CharField(blank=True, max_length=16, null=True, verbose_name='Сокращенное название')),
                ('departments', models.ManyToManyField(blank=True, to='campus_sibsau.Department', verbose_name='Кафедры')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_sibsau.director', verbose_name='Директор института')),
                ('soviet', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='campus_sibsau.soviet', verbose_name='Студенческий совет')),
            ],
            options={
                'verbose_name': 'Институт',
                'verbose_name_plural': 'Институты',
            },
        ),
    ]
